Note: EBNF means Erik's BNF :) In nonterminals, a newline implies an alternation (another option)
EBNF of C++ : http://www.externsoft.ch/download/cpp-iso.html
left or right associativity: https://stackoverflow.com/questions/41784524/preferred-way-of-removing-left-recursion-of-ebnf
Also note that this language description is never up-to-date.
I just use this file to keep sketch out new syntax.

program = scope EOF

scope = statementBlock
        '/#' statementsBlock '#/'
        '/!' statementsBlock '!/'

statementsBlock = { statement | comment }

statement = ('!' | '#') exprStatement ( ';' | EOF )
            define
            functionDef
            '{' scope '}'

define = ('#define' | '#undef') defineOptions EOL

defineOptions = ('date_format' ('mdy' | 'dmy') |  'date_units'

echoComment = '!//' rest_of_line

comment = '//' rest_of_line

functionDef = 'function' id '(' [functionParamDefs] ')' '{' statementBlock '}' [';']

functionParamDefs = id [ ',' id ]

exprStatement = addExpr 
                assignment

assignment = id '=' listExpr
             id ('+=' | '-=' | '*=' | '/=') addExpr 

addExpr = multExpr [ ("+" | "-") multExpr ]

multExpr = powerExpr [ ("*" | "/" | "%" | "%%") powerExpr ]

powerExpr = impliedMultExpr
            powerExpr "^" impliedMultExpr

impliedMultExpr = unaryExpr
                  unaryExpr (id | 
                             const | 
                             '(' postFixExpr ')'
                            )

unaryExpr = postFixExpr
            ("-" | "+") postFixExpr

postFixExpr = unitExpr 
            postFixExpr '.' ( "dec" | "hex" | "bin")
            postFixExpr '.'             // clear unit
            postFixExpr '.'  id
            postFixExpr '.' ("day" | "year" | "month")
            postFixExpr '!'
            primaryExpr ("++" | "--")
            
unitExpr = primaryExpr [unit]

primaryExpr = const
              id
              "(", listExpr, ")"
              callExpr
              absExpr

absExpr = '|' addExpr '|'

const = {-} [0..9] unit
        QUOT dateString QUOT

unit = id

callExpr = funcId '(' listExpr ')'

listExpr = addExpr [ ',' addExpr ]

dateString = dateElement dateSeparator dateElement dateSeparator dateElement

dateElement = integer | 'last' | monthName | dayName | timeString

dateSeparator = ' ' | '/' | '-'

timeSeparator = ':'
timeString = ...todo...